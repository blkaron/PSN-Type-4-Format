function [time_vector, time_vector_str] = calc_time_vector(fixed_header)
%Create a time meaningful vector from the fixed_header data
%INPUT:  fixed_header data as defined by the PSN-Type-4-Format
%OUTPUT: time_vector in miliseconds
%        time_vector_str a string representation of the time stamps

time_vector = zeros(1,fixed_header.sampleCount); %leave space for the vector (to speed up things)
sample_period = 1/fixed_header.spsRate;

%This is the start of the recording in milliseconds
time_start = (double(fixed_header.DateTime.hour) * 3600 + ...
              double(fixed_header.DateTime.minute) * 60 + ...
              double(fixed_header.DateTime.seconds)) * 1000 + ...
              double(fixed_header.DateTime.nanoseconds) / 1e06;

for i = 1:fixed_header.sampleCount
    hours = floor(mod((time_start / (1000*60*60)), 24));
    minutes = floor(mod((time_start / (1000 * 60)),60));
    seconds = sprintf('%.3f',(mod((time_start / 1000), 60))); %save as fraction since the format cast will fail otherwise
    if i == 1
        time_vector(1) = time_start;
        time_vector_str = datetime([int2str(double(fixed_header.DateTime.year)),'-',...
                                   int2str(double(fixed_header.DateTime.month)),'-',...
                                   int2str(double(fixed_header.DateTime.day)),' ',...
                                   int2str(hours),':'...
                                   int2str(minutes),':'...
                                   num2str(seconds)],'InputFormat','yyyy-MM-dd'' ''HH:mm:ss.SSS', 'Format', 'preserveinput');                      
    else
        time_vector(i) = time_vector(i-1) + sample_period;
        time_vector_str(i) = datetime([int2str(double(fixed_header.DateTime.year)),'-',...
                                   int2str(double(fixed_header.DateTime.month)),'-',...
                                   int2str(double(fixed_header.DateTime.day)),' ',...
                                   int2str(hours),':'...
                                   int2str(minutes),':'...
                                   num2str(seconds)],'InputFormat','yyyy-MM-dd'' ''HH:mm:ss.SSS', 'Format', 'preserveinput');
    end
    time_start = time_start + (sample_period * 1000);
end




